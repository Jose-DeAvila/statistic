var dataObject={},max=0,min=0,resultR=0,resultM=0,numDatos=0,dataArray=[],intervalo=0;document.getElementById("btnCalc").addEventListener("click",t=>{0===numDatos?alert("Llene la tabla primero!"):(setOperationR(),setOperationM(),setOperationC(),setTable())}),document.getElementById("form").addEventListener("submit",t=>{t.preventDefault();var e=document.getElementById("input").value;""===e?alert("No pueden haber datos con 0"):(dataObject.hasOwnProperty(parseInt(e/10))?dataObject[parseInt(e/10)].push(e%10):dataObject[parseInt(e/10)]=[parseInt(e%10)],dataArray.push(e),numDatos+=1,max=dataArray.sort((t,e)=>e-t)[0],min=dataArray.sort((t,e)=>t-e)[0],setTree(),document.getElementById("form").reset())});const setOperationR=()=>{for(operationR=document.getElementById("operationR");operationR.hasChildNodes();)operationR.removeChild(operationR.firstChild);resultR=max-min;let t=document.createElement("p"),e=`\n    <p class="operationProcessR">R = ${max} - ${0===min?"0":min} = <span class="operationResultR">${max-min}</span></p>\n  `;t.innerHTML=e,operationR.appendChild(t)},setOperationC=()=>{for(operationC=document.getElementById("operationC");operationC.hasChildNodes();)operationC.removeChild(operationC.firstChild);resultC=resultR/resultM%1==0?resultR/resultM:parseInt(resultR/resultM)+1;let t=document.createElement("p"),e=`\n    <p class="operationProcessM">C = ${resultR} / ${resultM} = <span class="operationResultM">${resultR/resultM} ≈ ${resultC}</span></p>\n  `;t.innerHTML=e,operationC.appendChild(t)},setOperationM=()=>{for(operationM=document.getElementById("operationM");operationM.hasChildNodes();)operationM.removeChild(operationM.firstChild);resultM=(1+3.33*Math.log10(numDatos))%1==0?1+3.33*Math.log10(numDatos):1+3.33*Math.log10(numDatos)>parseInt(1+3.33*Math.log10(numDatos))+.5?parseInt(1+3.33*Math.log10(numDatos))+1:parseInt(1+3.33*Math.log10(numDatos));let t=document.createElement("p"),e=`\n    <p class="operationProcessM">M = 1 + 3.33log(${numDatos}) = <span class="operationResultM">${1+3.33*Math.log10(numDatos)} ≈ ${resultM}</span></p>\n  `;t.innerHTML=e,operationM.appendChild(t)},setTable=()=>{let t=[],e={},n=[],a=[],r=[],o=[],l=[];const s=document.getElementById("tbody-interval");for(;s.hasChildNodes();)s.removeChild(s.firstChild);var d=[parseInt(min)];for(let t=1;t<=resultM;t++)d.push(d[t-1]+resultC);for(let e=0;e<resultM;e++)t.push((d[e]+d[e+1])/2);auxArray=dataArray.sort((t,e)=>t-e);for(let t of dataArray)for(let n=0;n<resultM;n++)t>=d[n]&&t<d[n+1]?e[d[n]]=(e[d[n]]||0)+1:e[d[n]]=e[d[n]]||0;let i=Object.values(e);for(let t=0;t<i.length;t++)n[t]=(n[t-1]||0)+i[t];for(let t=0;t<i.length;t++)a[t]=i[t]/numDatos;for(let t=0;t<a.length;t++)r[t]=(r[t-1]||0)+a[t];for(let t=0;t<r.length;t++)o[t]=100*a[t];for(let t=0;t<o.length;t++)l[t]=(l[t-1]||0)+o[t];forInsertTableInterval=document.createElement("tr");for(let i=0;i<resultM;i++){let p=Object.values(e)[i],u=document.createElement("tr"),m=`\n      <tr>\n        <td>\n          [${d[i]} - ${d[i+1]})\n        </td>\n        <td>\n          ${t[i]}\n        </td>\n        <td>\n          ${p}\n        </td>\n        <td>\n          ${n[i]}\n        </td>\n        <td>\n          ${a[i]}\n        </td>\n        <td>\n          ${r[i]}\n        </td>\n        <td>\n          ${o[i]}%\n        </td>\n        <td>\n          ${l[i]}%\n        </td>\n      </tr>\n    `;u.innerHTML=m,s.appendChild(u)}},setTree=()=>{const t=document.getElementById("tbody");for(;t.hasChildNodes();)t.removeChild(t.firstChild);let e=Object.keys(dataObject);Object.values(dataObject);for(let n=0;n<e.length;n++){let a=Object.values(dataObject)[n].sort((t,e)=>t-e),r=document.createElement("tr"),o=`\n    <tr>\n      <td>\n        ${0==e[n]?a.toString():e[n]}\n      </td>\n      <td>\n        ${0==e[n]?"":a.toString()}\n      </td>\n    </tr>`;r.innerHTML=o,t.appendChild(r)}};
